[{"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\index.js":"1","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\reportWebVitals.js":"2","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\App.js":"3","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Map.js":"4","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\contexts\\DataProvider.js":"5","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\contexts\\DataContext.js":"6","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Search.js":"7","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\MapComp.js":"8","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Results.js":"9","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Form.js":"10","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\ResultTable.js":"11","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\locationSearch.js":"12","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\MapV2.js":"13","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\MapV3.js":"14","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\autoC.js":"15","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\NewResult.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1001,"mtime":1607591563412,"results":"20","hashOfConfig":"18"},{"size":1289,"mtime":1606906668185,"results":"21","hashOfConfig":"22"},{"size":4075,"mtime":1607579350273,"results":"23","hashOfConfig":"18"},{"size":105,"mtime":1606875136495,"results":"24","hashOfConfig":"18"},{"size":2616,"mtime":1606913564928,"results":"25","hashOfConfig":"22"},{"size":1264,"mtime":1607421187096,"results":"26","hashOfConfig":"18"},{"size":1529,"mtime":1607592798889,"results":"27","hashOfConfig":"18"},{"size":8201,"mtime":1607587131524,"results":"28","hashOfConfig":"18"},{"size":4632,"mtime":1607586990292,"results":"29","hashOfConfig":"18"},{"size":4725,"mtime":1607409758691,"results":"30","hashOfConfig":"18"},{"size":4734,"mtime":1607420439967,"results":"31","hashOfConfig":"18"},{"size":2306,"mtime":1607587662616,"results":"32","hashOfConfig":"18"},{"size":2255,"mtime":1607430247530,"results":"33","hashOfConfig":"18"},{"size":3712,"mtime":1607580203307,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"10hqwyg",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"so6fkj",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\index.js",[],["76","77"],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\reportWebVitals.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\App.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Map.js",["78","79"],"import React, { useContext } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\nimport DataContext from \"../contexts/DataContext\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nfunction MyComponent() {\r\n  const context = useContext(DataContext);\r\n  const [map, setMap] = React.useState(null);\r\n  const center = context.center;\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    console.log(bounds);\r\n    console.log(context.center);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyCvjpFtnnspPCQx-e4biZP44Q7tXQrs1gg\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={12}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        {context.markers.map((marker, index) => {\r\n          return <Marker position={marker} key={index} />;\r\n        })}\r\n        <></>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(MyComponent);\r\n",["80","81"],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\contexts\\DataProvider.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\contexts\\DataContext.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Search.js",["82","83","84","85","86","87","88","89","90"],"import React, { Component } from \"react\";\r\nimport DataContext from \"../contexts/DataContext\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport clsx from \"clsx\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\n\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n    };\r\n    this.cancel = \"\";\r\n  }\r\n  // Update the Context. If you recall from Step 2, this is\r\n  // actually just calling this.setState() on our Provider!\r\n  handleClick() {\r\n    this.context.update({ center: { lat: 7.93197, lng: 79.85775 } });\r\n  }\r\n\r\n  /**\r\n   * Fetch the search results and update the state with the result.\r\n   *\r\n   * @param {int} updatedPageNo Updated Page No.\r\n   * @param {String} query Search Query.\r\n   *\r\n   */\r\n  fetchSearchResults = (updatedPageNo = \"\", query) => {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://rest-clubs.herokuapp.com/list?name=${query}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        this.context.update({ data: res.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        if (axios.isCancel(error) || error) {\r\n          this.context.update({ loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleOnInputChange = (event) => {\r\n    const query = event.target.value;\r\n    if (!query) {\r\n      this.setState({ query });\r\n    } else {\r\n      this.setState({ query }, () => {\r\n        this.fetchSearchResults(1, query);\r\n      });\r\n    }\r\n  };\r\n\r\n  clearInput = (event) => {\r\n    event.target.value = \"\";\r\n  };\r\n\r\n  // Call `handleClick` when the user clicks the component.\r\n  render() {\r\n    return (\r\n      <>\r\n        <TextField\r\n          label=\"Search by Club Name\"\r\n          variant=\"outlined\"\r\n          onChange={this.handleOnInputChange}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <IconButton onMouseDown={this.clearInput}>\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton>\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.contextType = DataContext;\r\n\r\nexport default Search;\r\n","I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\MapComp.js",["91"],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Results.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\Form.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\ResultTable.js",[],["92","93"],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\locationSearch.js",["94","95"],"import React, { useState, Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// We will use these things from the lib\r\n// https://react-google-maps-api-docs.netlify.com/\r\nimport {\r\n  useLoadScript,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\nexport default function () {\r\n  // The things we need to track in state\r\n  const [mapRef, setMapRef] = useState(null);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [markerMap, setMarkerMap] = useState({});\r\n  const [center, setCenter] = useState({ lat: 44.076613, lng: -98.362239833 });\r\n  const [zoom, setZoom] = useState(5);\r\n  const [clickedLatLng, setClickedLatLng] = useState(null);\r\n  const [infoOpen, setInfoOpen] = useState(false);\r\n\r\n  // Load the Google maps scripts\r\n  const { isLoaded } = useLoadScript({\r\n    // Enter your own Google Maps API key\r\n    googleMapsApiKey: \"\",\r\n  });\r\n\r\n  // The places I want to create markers for.\r\n  // This could be a data-driven prop.\r\n  const myPlaces = [\r\n    { id: \"place1\", pos: { lat: 39.09366509575983, lng: -94.58751660204751 } },\r\n    { id: \"place2\", pos: { lat: 39.10894664788252, lng: -94.57926449532226 } },\r\n    { id: \"place3\", pos: { lat: 39.07602397235644, lng: -94.5184089401211 } },\r\n  ];\r\n\r\n  // Iterate myPlaces to size, center, and zoom map to contain all markers\r\n  const fitBounds = (map) => {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    myPlaces.map((place) => {\r\n      bounds.extend(place.pos);\r\n      return place.id;\r\n    });\r\n    map.fitBounds(bounds);\r\n  };\r\n\r\n  const loadHandler = (map) => {\r\n    // Store a reference to the google map instance in state\r\n    setMapRef(map);\r\n    // Fit map bounds to contain all markers\r\n    fitBounds(map);\r\n  };\r\n\r\n  // We have to create a mapping of our places to actual Marker objects\r\n  const markerLoadHandler = (marker, place) => {\r\n    return setMarkerMap((prevState) => {\r\n      return { ...prevState, [place.id]: marker };\r\n    });\r\n  };\r\n\r\n  const markerClickHandler = (event, place) => {\r\n    // Remember which place was clicked\r\n    setSelectedPlace(place);\r\n\r\n    // Required so clicking a 2nd marker works as expected\r\n    if (infoOpen) {\r\n      setInfoOpen(false);\r\n    }\r\n\r\n    setInfoOpen(true);\r\n\r\n    // If you want to zoom in a little on marker click\r\n    if (zoom < 13) {\r\n      setZoom(13);\r\n    }\r\n\r\n    // if you want to center the selected Marker\r\n    //setCenter(place.pos)\r\n  };\r\n\r\n  const renderMap = () => {\r\n    return (\r\n      <Fragment>\r\n        <GoogleMap\r\n          // Do stuff on map initial laod\r\n          onLoad={loadHandler}\r\n          // Save the current center position in state\r\n          onCenterChanged={() => setCenter(mapRef.getCenter().toJSON())}\r\n          // Save the user's map click position\r\n          onClick={(e) => setClickedLatLng(e.latLng.toJSON())}\r\n          center={center}\r\n          zoom={zoom}\r\n          mapContainerStyle={{\r\n            height: \"70vh\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {myPlaces.map((place) => (\r\n            <Marker\r\n              key={place.id}\r\n              position={place.pos}\r\n              onLoad={(marker) => markerLoadHandler(marker, place)}\r\n              onClick={(event) => markerClickHandler(event, place)}\r\n              // Not required, but if you want a custom icon:\r\n              icon={{\r\n                path:\r\n                  \"M12.75 0l-2.25 2.25 2.25 2.25-5.25 6h-5.25l4.125 4.125-6.375 8.452v0.923h0.923l8.452-6.375 4.125 4.125v-5.25l6-5.25 2.25 2.25 2.25-2.25-11.25-11.25zM10.5 12.75l-1.5-1.5 5.25-5.25 1.5 1.5-5.25 5.25z\",\r\n                fillColor: \"#0000ff\",\r\n                fillOpacity: 1.0,\r\n                strokeWeight: 0,\r\n                scale: 1.25,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {infoOpen && selectedPlace && (\r\n            <InfoWindow\r\n              anchor={markerMap[selectedPlace.id]}\r\n              onCloseClick={() => setInfoOpen(false)}\r\n            >\r\n              <div>\r\n                <h3>{selectedPlace.id}</h3>\r\n                <div>This is your info window content</div>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n\r\n        {/* Our center position always in state */}\r\n        <h3>\r\n          Center {center.lat}, {center.lng}\r\n        </h3>\r\n\r\n        {/* Position of the user's map click */}\r\n        {clickedLatLng && (\r\n          <h3>\r\n            You clicked: {clickedLatLng.lat}, {clickedLatLng.lng}\r\n          </h3>\r\n        )}\r\n\r\n        {/* Position of the user's map click */}\r\n        {selectedPlace && <h3>Selected Marker: {selectedPlace.id}</h3>}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return isLoaded ? renderMap() : null;\r\n}\r\n",["96","97"],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\MapV2.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\MapV3.js",[],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\autoC.js",["98"],"import React from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport {\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\n\r\nclass LocationSearchInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: \"\" };\r\n  }\r\n\r\n  handleChange = (address) => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  inputAdornment = () => {\r\n    return (\r\n      <InputAdornment position=\"start\">\r\n        <RoomIcon />\r\n      </InputAdornment>\r\n    );\r\n  };\r\n\r\n  handleSelect = (address) => {\r\n    this.handleChange(address);\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => console.log(\"Success\", latLng))\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel htmlFor=\"search-location\">Location</InputLabel>\r\n\r\n              <OutlinedInput\r\n                {...getInputProps({\r\n                  placeholder: \"Search Places ...\",\r\n                  className: \"location-search-input\",\r\n                  labelWidth: 60,\r\n                  startAdornment: this.inputAdornment,\r\n                })}\r\n              />\r\n            </FormControl>\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <div>Loading...</div>}\r\n              {suggestions.map((suggestion) => {\r\n                const className = suggestion.active\r\n                  ? \"suggestion-item--active\"\r\n                  : \"suggestion-item\";\r\n                // inline style for demonstration purpose\r\n\r\n                return <MenuItem>{suggestion.description}</MenuItem>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationSearchInput;\r\n",["99","100"],"I:\\Dev Projects\\Rotract Project\\api-search-v2\\src\\components\\NewResult.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":12,"column":10,"nodeType":"107","messageId":"108","endLine":12,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":21,"column":6,"nodeType":"111","endLine":21,"endColumn":8,"suggestions":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"103","replacedBy":"114"},{"ruleId":"105","severity":1,"message":"115","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":20},{"ruleId":"105","severity":1,"message":"116","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"117","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":18},{"ruleId":"105","severity":1,"message":"118","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":19},{"ruleId":"105","severity":1,"message":"119","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":12},{"ruleId":"105","severity":1,"message":"120","line":12,"column":8,"nodeType":"107","messageId":"108","endLine":12,"endColumn":12},{"ruleId":"105","severity":1,"message":"121","line":16,"column":8,"nodeType":"107","messageId":"108","endLine":16,"endColumn":19},{"ruleId":"105","severity":1,"message":"122","line":17,"column":8,"nodeType":"107","messageId":"108","endLine":17,"endColumn":21},{"ruleId":"105","severity":1,"message":"123","line":19,"column":8,"nodeType":"107","messageId":"108","endLine":19,"endColumn":22},{"ruleId":"105","severity":1,"message":"124","line":14,"column":7,"nodeType":"107","messageId":"108","endLine":14,"endColumn":16},{"ruleId":"101","replacedBy":"125"},{"ruleId":"103","replacedBy":"126"},{"ruleId":"105","severity":1,"message":"127","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":13,"column":1,"nodeType":"130","endLine":148,"endColumn":2},{"ruleId":"101","replacedBy":"131"},{"ruleId":"103","replacedBy":"132"},{"ruleId":"105","severity":1,"message":"133","line":65,"column":23,"nodeType":"107","messageId":"108","endLine":65,"endColumn":32},{"ruleId":"101","replacedBy":"134"},{"ruleId":"103","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'context.center'. Either include it or remove the dependency array.","ArrayExpression",["138"],["136"],["137"],"'makeStyles' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Grid' is defined but never used.","'clsx' is defined but never used.","'FilledInput' is defined but never used.","'OutlinedInput' is defined but never used.","'FormHelperText' is defined but never used.","'libraries' is assigned a value but never used.",["136"],["137"],"'ReactDOM' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["136"],["137"],"'className' is assigned a value but never used.",["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [context.center]",{"range":"141","text":"142"},[624,626],"[context.center]"]